# Makefile.in generated by automake 1.11.1 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/MIBLab
pkgincludedir = $(includedir)/MIBLab
pkglibdir = $(libdir)/MIBLab
pkglibexecdir = $(libexecdir)/MIBLab
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = lib
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libmiblab_a_AR = $(AR) $(ARFLAGS)
libmiblab_a_LIBADD =
am__libmiblab_a_SOURCES_DIST = commandline.cpp md5str.cpp rand.cpp \
	statistics.cpp strconv.cpp stringtokenizer.cpp uniqid.cpp \
	feature_selection.cpp normalize.cpp svm.cpp lc.cpp lr.cpp \
	classifier.cpp classifier_shared.cpp bayes.cpp em.cpp knn.cpp \
	dtree.cpp forest.cpp parzen.cpp
#am_libmiblab_a_OBJECTS =  \
#	libmiblab_a-commandline.$(OBJEXT) \
#	libmiblab_a-md5str.$(OBJEXT) \
#	libmiblab_a-rand.$(OBJEXT) \
#	libmiblab_a-statistics.$(OBJEXT) \
#	libmiblab_a-strconv.$(OBJEXT) \
#	libmiblab_a-stringtokenizer.$(OBJEXT) \
#	libmiblab_a-uniqid.$(OBJEXT) \
#	libmiblab_a-feature_selection.$(OBJEXT) \
#	libmiblab_a-normalize.$(OBJEXT) \
#	libmiblab_a-svm.$(OBJEXT) \
#	libmiblab_a-lc.$(OBJEXT) \
#	libmiblab_a-lr.$(OBJEXT)
am_libmiblab_a_OBJECTS =  \
	libmiblab_a-commandline.$(OBJEXT) \
	libmiblab_a-md5str.$(OBJEXT) \
	libmiblab_a-rand.$(OBJEXT) \
	libmiblab_a-statistics.$(OBJEXT) \
	libmiblab_a-strconv.$(OBJEXT) \
	libmiblab_a-stringtokenizer.$(OBJEXT) \
	libmiblab_a-uniqid.$(OBJEXT) \
	libmiblab_a-feature_selection.$(OBJEXT) \
	libmiblab_a-normalize.$(OBJEXT) \
	libmiblab_a-classifier.$(OBJEXT) \
	libmiblab_a-classifier_shared.$(OBJEXT) \
	libmiblab_a-bayes.$(OBJEXT) \
	libmiblab_a-em.$(OBJEXT) \
	libmiblab_a-knn.$(OBJEXT) \
	libmiblab_a-svm.$(OBJEXT) \
	libmiblab_a-lc.$(OBJEXT) \
	libmiblab_a-dtree.$(OBJEXT) \
	libmiblab_a-forest.$(OBJEXT) \
	libmiblab_a-parzen.$(OBJEXT) \
	libmiblab_a-lr.$(OBJEXT)
libmiblab_a_OBJECTS = $(am_libmiblab_a_OBJECTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libmiblab_a_SOURCES)
DIST_SOURCES = $(am__libmiblab_a_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/missing --run tar
AUTOCONF = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/missing --run automake-1.11
AWK = gawk
BOOST = /home/jphan/Projects/CodeTree/boost_1_42_0
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"MIBLab\" -DPACKAGE_TARNAME=\"miblab\" -DPACKAGE_VERSION=\"0.9\" -DPACKAGE_STRING=\"MIBLab\ 0.9\" -DPACKAGE_BUGREPORT=\"jhphan@gmail.com\" -DPACKAGE=\"MIBLab\" -DVERSION=\"0.9\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE__BOOL=1 -DHAVE_STDBOOL_H=1 -DTIME_WITH_SYS_TIME=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_SYSINFO=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LAPACK = /home/jphan/Projects/CodeTree/lapack-3.2.1
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OPENCV = /opt/opencv
PACKAGE = MIBLab
PACKAGE_BUGREPORT = jhphan@gmail.com
PACKAGE_NAME = MIBLab
PACKAGE_STRING = MIBLab 0.9
PACKAGE_TARNAME = miblab
PACKAGE_VERSION = 0.9
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TSNNLS = 
VERSION = 0.9
abs_builddir = /home/jphan/Projects/CodeTree/miblab_library/lib
abs_srcdir = /home/jphan/Projects/CodeTree/miblab_library/lib
abs_top_builddir = /home/jphan/Projects/CodeTree/miblab_library
abs_top_srcdir = /home/jphan/Projects/CodeTree/miblab_library
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jphan/Projects/CodeTree/miblab_library/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/miblab
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LIBRARIES = libmiblab.a
libmiblab_a_CFLAGS = -g -O2
#libmiblab_a_CPPFLAGS = -I$(top_srcdir)/include -I$(BOOST)
libmiblab_a_CPPFLAGS = -I$(top_srcdir)/include -I$(OPENCV)/include -I$(BOOST)
#libmiblab_a_SOURCES = \
#	commandline.cpp \
#	md5str.cpp \
#	rand.cpp \
#	statistics.cpp \
#	strconv.cpp \
#	stringtokenizer.cpp \
#	uniqid.cpp \
#	feature_selection.cpp \
#	normalize.cpp \
#	svm.cpp \
#	lc.cpp \
#	lr.cpp

libmiblab_a_SOURCES = \
	commandline.cpp \
	md5str.cpp \
	rand.cpp \
	statistics.cpp \
	strconv.cpp \
	stringtokenizer.cpp \
	uniqid.cpp \
	feature_selection.cpp \
	normalize.cpp \
	classifier.cpp \
	classifier_shared.cpp \
	bayes.cpp \
	em.cpp \
	knn.cpp	\
	svm.cpp \
	lc.cpp \
	dtree.cpp \
	forest.cpp \
	parzen.cpp \
	lr.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libmiblab.a: $(libmiblab_a_OBJECTS) $(libmiblab_a_DEPENDENCIES) 
	-rm -f libmiblab.a
	$(libmiblab_a_AR) libmiblab.a $(libmiblab_a_OBJECTS) $(libmiblab_a_LIBADD)
	$(RANLIB) libmiblab.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmiblab_a-bayes.Po
include ./$(DEPDIR)/libmiblab_a-classifier.Po
include ./$(DEPDIR)/libmiblab_a-classifier_shared.Po
include ./$(DEPDIR)/libmiblab_a-commandline.Po
include ./$(DEPDIR)/libmiblab_a-dtree.Po
include ./$(DEPDIR)/libmiblab_a-em.Po
include ./$(DEPDIR)/libmiblab_a-feature_selection.Po
include ./$(DEPDIR)/libmiblab_a-forest.Po
include ./$(DEPDIR)/libmiblab_a-knn.Po
include ./$(DEPDIR)/libmiblab_a-lc.Po
include ./$(DEPDIR)/libmiblab_a-lr.Po
include ./$(DEPDIR)/libmiblab_a-md5str.Po
include ./$(DEPDIR)/libmiblab_a-normalize.Po
include ./$(DEPDIR)/libmiblab_a-parzen.Po
include ./$(DEPDIR)/libmiblab_a-rand.Po
include ./$(DEPDIR)/libmiblab_a-statistics.Po
include ./$(DEPDIR)/libmiblab_a-strconv.Po
include ./$(DEPDIR)/libmiblab_a-stringtokenizer.Po
include ./$(DEPDIR)/libmiblab_a-svm.Po
include ./$(DEPDIR)/libmiblab_a-uniqid.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libmiblab_a-commandline.o: commandline.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-commandline.o -MD -MP -MF $(DEPDIR)/libmiblab_a-commandline.Tpo -c -o libmiblab_a-commandline.o `test -f 'commandline.cpp' || echo '$(srcdir)/'`commandline.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-commandline.Tpo $(DEPDIR)/libmiblab_a-commandline.Po
#	source='commandline.cpp' object='libmiblab_a-commandline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-commandline.o `test -f 'commandline.cpp' || echo '$(srcdir)/'`commandline.cpp

libmiblab_a-commandline.obj: commandline.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-commandline.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-commandline.Tpo -c -o libmiblab_a-commandline.obj `if test -f 'commandline.cpp'; then $(CYGPATH_W) 'commandline.cpp'; else $(CYGPATH_W) '$(srcdir)/commandline.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-commandline.Tpo $(DEPDIR)/libmiblab_a-commandline.Po
#	source='commandline.cpp' object='libmiblab_a-commandline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-commandline.obj `if test -f 'commandline.cpp'; then $(CYGPATH_W) 'commandline.cpp'; else $(CYGPATH_W) '$(srcdir)/commandline.cpp'; fi`

libmiblab_a-md5str.o: md5str.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-md5str.o -MD -MP -MF $(DEPDIR)/libmiblab_a-md5str.Tpo -c -o libmiblab_a-md5str.o `test -f 'md5str.cpp' || echo '$(srcdir)/'`md5str.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-md5str.Tpo $(DEPDIR)/libmiblab_a-md5str.Po
#	source='md5str.cpp' object='libmiblab_a-md5str.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-md5str.o `test -f 'md5str.cpp' || echo '$(srcdir)/'`md5str.cpp

libmiblab_a-md5str.obj: md5str.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-md5str.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-md5str.Tpo -c -o libmiblab_a-md5str.obj `if test -f 'md5str.cpp'; then $(CYGPATH_W) 'md5str.cpp'; else $(CYGPATH_W) '$(srcdir)/md5str.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-md5str.Tpo $(DEPDIR)/libmiblab_a-md5str.Po
#	source='md5str.cpp' object='libmiblab_a-md5str.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-md5str.obj `if test -f 'md5str.cpp'; then $(CYGPATH_W) 'md5str.cpp'; else $(CYGPATH_W) '$(srcdir)/md5str.cpp'; fi`

libmiblab_a-rand.o: rand.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-rand.o -MD -MP -MF $(DEPDIR)/libmiblab_a-rand.Tpo -c -o libmiblab_a-rand.o `test -f 'rand.cpp' || echo '$(srcdir)/'`rand.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-rand.Tpo $(DEPDIR)/libmiblab_a-rand.Po
#	source='rand.cpp' object='libmiblab_a-rand.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-rand.o `test -f 'rand.cpp' || echo '$(srcdir)/'`rand.cpp

libmiblab_a-rand.obj: rand.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-rand.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-rand.Tpo -c -o libmiblab_a-rand.obj `if test -f 'rand.cpp'; then $(CYGPATH_W) 'rand.cpp'; else $(CYGPATH_W) '$(srcdir)/rand.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-rand.Tpo $(DEPDIR)/libmiblab_a-rand.Po
#	source='rand.cpp' object='libmiblab_a-rand.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-rand.obj `if test -f 'rand.cpp'; then $(CYGPATH_W) 'rand.cpp'; else $(CYGPATH_W) '$(srcdir)/rand.cpp'; fi`

libmiblab_a-statistics.o: statistics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-statistics.o -MD -MP -MF $(DEPDIR)/libmiblab_a-statistics.Tpo -c -o libmiblab_a-statistics.o `test -f 'statistics.cpp' || echo '$(srcdir)/'`statistics.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-statistics.Tpo $(DEPDIR)/libmiblab_a-statistics.Po
#	source='statistics.cpp' object='libmiblab_a-statistics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-statistics.o `test -f 'statistics.cpp' || echo '$(srcdir)/'`statistics.cpp

libmiblab_a-statistics.obj: statistics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-statistics.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-statistics.Tpo -c -o libmiblab_a-statistics.obj `if test -f 'statistics.cpp'; then $(CYGPATH_W) 'statistics.cpp'; else $(CYGPATH_W) '$(srcdir)/statistics.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-statistics.Tpo $(DEPDIR)/libmiblab_a-statistics.Po
#	source='statistics.cpp' object='libmiblab_a-statistics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-statistics.obj `if test -f 'statistics.cpp'; then $(CYGPATH_W) 'statistics.cpp'; else $(CYGPATH_W) '$(srcdir)/statistics.cpp'; fi`

libmiblab_a-strconv.o: strconv.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-strconv.o -MD -MP -MF $(DEPDIR)/libmiblab_a-strconv.Tpo -c -o libmiblab_a-strconv.o `test -f 'strconv.cpp' || echo '$(srcdir)/'`strconv.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-strconv.Tpo $(DEPDIR)/libmiblab_a-strconv.Po
#	source='strconv.cpp' object='libmiblab_a-strconv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-strconv.o `test -f 'strconv.cpp' || echo '$(srcdir)/'`strconv.cpp

libmiblab_a-strconv.obj: strconv.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-strconv.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-strconv.Tpo -c -o libmiblab_a-strconv.obj `if test -f 'strconv.cpp'; then $(CYGPATH_W) 'strconv.cpp'; else $(CYGPATH_W) '$(srcdir)/strconv.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-strconv.Tpo $(DEPDIR)/libmiblab_a-strconv.Po
#	source='strconv.cpp' object='libmiblab_a-strconv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-strconv.obj `if test -f 'strconv.cpp'; then $(CYGPATH_W) 'strconv.cpp'; else $(CYGPATH_W) '$(srcdir)/strconv.cpp'; fi`

libmiblab_a-stringtokenizer.o: stringtokenizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-stringtokenizer.o -MD -MP -MF $(DEPDIR)/libmiblab_a-stringtokenizer.Tpo -c -o libmiblab_a-stringtokenizer.o `test -f 'stringtokenizer.cpp' || echo '$(srcdir)/'`stringtokenizer.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-stringtokenizer.Tpo $(DEPDIR)/libmiblab_a-stringtokenizer.Po
#	source='stringtokenizer.cpp' object='libmiblab_a-stringtokenizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-stringtokenizer.o `test -f 'stringtokenizer.cpp' || echo '$(srcdir)/'`stringtokenizer.cpp

libmiblab_a-stringtokenizer.obj: stringtokenizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-stringtokenizer.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-stringtokenizer.Tpo -c -o libmiblab_a-stringtokenizer.obj `if test -f 'stringtokenizer.cpp'; then $(CYGPATH_W) 'stringtokenizer.cpp'; else $(CYGPATH_W) '$(srcdir)/stringtokenizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-stringtokenizer.Tpo $(DEPDIR)/libmiblab_a-stringtokenizer.Po
#	source='stringtokenizer.cpp' object='libmiblab_a-stringtokenizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-stringtokenizer.obj `if test -f 'stringtokenizer.cpp'; then $(CYGPATH_W) 'stringtokenizer.cpp'; else $(CYGPATH_W) '$(srcdir)/stringtokenizer.cpp'; fi`

libmiblab_a-uniqid.o: uniqid.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-uniqid.o -MD -MP -MF $(DEPDIR)/libmiblab_a-uniqid.Tpo -c -o libmiblab_a-uniqid.o `test -f 'uniqid.cpp' || echo '$(srcdir)/'`uniqid.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-uniqid.Tpo $(DEPDIR)/libmiblab_a-uniqid.Po
#	source='uniqid.cpp' object='libmiblab_a-uniqid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-uniqid.o `test -f 'uniqid.cpp' || echo '$(srcdir)/'`uniqid.cpp

libmiblab_a-uniqid.obj: uniqid.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-uniqid.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-uniqid.Tpo -c -o libmiblab_a-uniqid.obj `if test -f 'uniqid.cpp'; then $(CYGPATH_W) 'uniqid.cpp'; else $(CYGPATH_W) '$(srcdir)/uniqid.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-uniqid.Tpo $(DEPDIR)/libmiblab_a-uniqid.Po
#	source='uniqid.cpp' object='libmiblab_a-uniqid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-uniqid.obj `if test -f 'uniqid.cpp'; then $(CYGPATH_W) 'uniqid.cpp'; else $(CYGPATH_W) '$(srcdir)/uniqid.cpp'; fi`

libmiblab_a-feature_selection.o: feature_selection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-feature_selection.o -MD -MP -MF $(DEPDIR)/libmiblab_a-feature_selection.Tpo -c -o libmiblab_a-feature_selection.o `test -f 'feature_selection.cpp' || echo '$(srcdir)/'`feature_selection.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-feature_selection.Tpo $(DEPDIR)/libmiblab_a-feature_selection.Po
#	source='feature_selection.cpp' object='libmiblab_a-feature_selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-feature_selection.o `test -f 'feature_selection.cpp' || echo '$(srcdir)/'`feature_selection.cpp

libmiblab_a-feature_selection.obj: feature_selection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-feature_selection.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-feature_selection.Tpo -c -o libmiblab_a-feature_selection.obj `if test -f 'feature_selection.cpp'; then $(CYGPATH_W) 'feature_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_selection.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-feature_selection.Tpo $(DEPDIR)/libmiblab_a-feature_selection.Po
#	source='feature_selection.cpp' object='libmiblab_a-feature_selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-feature_selection.obj `if test -f 'feature_selection.cpp'; then $(CYGPATH_W) 'feature_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_selection.cpp'; fi`

libmiblab_a-normalize.o: normalize.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-normalize.o -MD -MP -MF $(DEPDIR)/libmiblab_a-normalize.Tpo -c -o libmiblab_a-normalize.o `test -f 'normalize.cpp' || echo '$(srcdir)/'`normalize.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-normalize.Tpo $(DEPDIR)/libmiblab_a-normalize.Po
#	source='normalize.cpp' object='libmiblab_a-normalize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-normalize.o `test -f 'normalize.cpp' || echo '$(srcdir)/'`normalize.cpp

libmiblab_a-normalize.obj: normalize.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-normalize.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-normalize.Tpo -c -o libmiblab_a-normalize.obj `if test -f 'normalize.cpp'; then $(CYGPATH_W) 'normalize.cpp'; else $(CYGPATH_W) '$(srcdir)/normalize.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-normalize.Tpo $(DEPDIR)/libmiblab_a-normalize.Po
#	source='normalize.cpp' object='libmiblab_a-normalize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-normalize.obj `if test -f 'normalize.cpp'; then $(CYGPATH_W) 'normalize.cpp'; else $(CYGPATH_W) '$(srcdir)/normalize.cpp'; fi`

libmiblab_a-svm.o: svm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-svm.o -MD -MP -MF $(DEPDIR)/libmiblab_a-svm.Tpo -c -o libmiblab_a-svm.o `test -f 'svm.cpp' || echo '$(srcdir)/'`svm.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-svm.Tpo $(DEPDIR)/libmiblab_a-svm.Po
#	source='svm.cpp' object='libmiblab_a-svm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-svm.o `test -f 'svm.cpp' || echo '$(srcdir)/'`svm.cpp

libmiblab_a-svm.obj: svm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-svm.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-svm.Tpo -c -o libmiblab_a-svm.obj `if test -f 'svm.cpp'; then $(CYGPATH_W) 'svm.cpp'; else $(CYGPATH_W) '$(srcdir)/svm.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-svm.Tpo $(DEPDIR)/libmiblab_a-svm.Po
#	source='svm.cpp' object='libmiblab_a-svm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-svm.obj `if test -f 'svm.cpp'; then $(CYGPATH_W) 'svm.cpp'; else $(CYGPATH_W) '$(srcdir)/svm.cpp'; fi`

libmiblab_a-lc.o: lc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-lc.o -MD -MP -MF $(DEPDIR)/libmiblab_a-lc.Tpo -c -o libmiblab_a-lc.o `test -f 'lc.cpp' || echo '$(srcdir)/'`lc.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-lc.Tpo $(DEPDIR)/libmiblab_a-lc.Po
#	source='lc.cpp' object='libmiblab_a-lc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-lc.o `test -f 'lc.cpp' || echo '$(srcdir)/'`lc.cpp

libmiblab_a-lc.obj: lc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-lc.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-lc.Tpo -c -o libmiblab_a-lc.obj `if test -f 'lc.cpp'; then $(CYGPATH_W) 'lc.cpp'; else $(CYGPATH_W) '$(srcdir)/lc.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-lc.Tpo $(DEPDIR)/libmiblab_a-lc.Po
#	source='lc.cpp' object='libmiblab_a-lc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-lc.obj `if test -f 'lc.cpp'; then $(CYGPATH_W) 'lc.cpp'; else $(CYGPATH_W) '$(srcdir)/lc.cpp'; fi`

libmiblab_a-lr.o: lr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-lr.o -MD -MP -MF $(DEPDIR)/libmiblab_a-lr.Tpo -c -o libmiblab_a-lr.o `test -f 'lr.cpp' || echo '$(srcdir)/'`lr.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-lr.Tpo $(DEPDIR)/libmiblab_a-lr.Po
#	source='lr.cpp' object='libmiblab_a-lr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-lr.o `test -f 'lr.cpp' || echo '$(srcdir)/'`lr.cpp

libmiblab_a-lr.obj: lr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-lr.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-lr.Tpo -c -o libmiblab_a-lr.obj `if test -f 'lr.cpp'; then $(CYGPATH_W) 'lr.cpp'; else $(CYGPATH_W) '$(srcdir)/lr.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-lr.Tpo $(DEPDIR)/libmiblab_a-lr.Po
#	source='lr.cpp' object='libmiblab_a-lr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-lr.obj `if test -f 'lr.cpp'; then $(CYGPATH_W) 'lr.cpp'; else $(CYGPATH_W) '$(srcdir)/lr.cpp'; fi`

libmiblab_a-classifier.o: classifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-classifier.o -MD -MP -MF $(DEPDIR)/libmiblab_a-classifier.Tpo -c -o libmiblab_a-classifier.o `test -f 'classifier.cpp' || echo '$(srcdir)/'`classifier.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-classifier.Tpo $(DEPDIR)/libmiblab_a-classifier.Po
#	source='classifier.cpp' object='libmiblab_a-classifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-classifier.o `test -f 'classifier.cpp' || echo '$(srcdir)/'`classifier.cpp

libmiblab_a-classifier.obj: classifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-classifier.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-classifier.Tpo -c -o libmiblab_a-classifier.obj `if test -f 'classifier.cpp'; then $(CYGPATH_W) 'classifier.cpp'; else $(CYGPATH_W) '$(srcdir)/classifier.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-classifier.Tpo $(DEPDIR)/libmiblab_a-classifier.Po
#	source='classifier.cpp' object='libmiblab_a-classifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-classifier.obj `if test -f 'classifier.cpp'; then $(CYGPATH_W) 'classifier.cpp'; else $(CYGPATH_W) '$(srcdir)/classifier.cpp'; fi`

libmiblab_a-classifier_shared.o: classifier_shared.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-classifier_shared.o -MD -MP -MF $(DEPDIR)/libmiblab_a-classifier_shared.Tpo -c -o libmiblab_a-classifier_shared.o `test -f 'classifier_shared.cpp' || echo '$(srcdir)/'`classifier_shared.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-classifier_shared.Tpo $(DEPDIR)/libmiblab_a-classifier_shared.Po
#	source='classifier_shared.cpp' object='libmiblab_a-classifier_shared.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-classifier_shared.o `test -f 'classifier_shared.cpp' || echo '$(srcdir)/'`classifier_shared.cpp

libmiblab_a-classifier_shared.obj: classifier_shared.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-classifier_shared.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-classifier_shared.Tpo -c -o libmiblab_a-classifier_shared.obj `if test -f 'classifier_shared.cpp'; then $(CYGPATH_W) 'classifier_shared.cpp'; else $(CYGPATH_W) '$(srcdir)/classifier_shared.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-classifier_shared.Tpo $(DEPDIR)/libmiblab_a-classifier_shared.Po
#	source='classifier_shared.cpp' object='libmiblab_a-classifier_shared.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-classifier_shared.obj `if test -f 'classifier_shared.cpp'; then $(CYGPATH_W) 'classifier_shared.cpp'; else $(CYGPATH_W) '$(srcdir)/classifier_shared.cpp'; fi`

libmiblab_a-bayes.o: bayes.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-bayes.o -MD -MP -MF $(DEPDIR)/libmiblab_a-bayes.Tpo -c -o libmiblab_a-bayes.o `test -f 'bayes.cpp' || echo '$(srcdir)/'`bayes.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-bayes.Tpo $(DEPDIR)/libmiblab_a-bayes.Po
#	source='bayes.cpp' object='libmiblab_a-bayes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-bayes.o `test -f 'bayes.cpp' || echo '$(srcdir)/'`bayes.cpp

libmiblab_a-bayes.obj: bayes.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-bayes.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-bayes.Tpo -c -o libmiblab_a-bayes.obj `if test -f 'bayes.cpp'; then $(CYGPATH_W) 'bayes.cpp'; else $(CYGPATH_W) '$(srcdir)/bayes.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-bayes.Tpo $(DEPDIR)/libmiblab_a-bayes.Po
#	source='bayes.cpp' object='libmiblab_a-bayes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-bayes.obj `if test -f 'bayes.cpp'; then $(CYGPATH_W) 'bayes.cpp'; else $(CYGPATH_W) '$(srcdir)/bayes.cpp'; fi`

libmiblab_a-em.o: em.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-em.o -MD -MP -MF $(DEPDIR)/libmiblab_a-em.Tpo -c -o libmiblab_a-em.o `test -f 'em.cpp' || echo '$(srcdir)/'`em.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-em.Tpo $(DEPDIR)/libmiblab_a-em.Po
#	source='em.cpp' object='libmiblab_a-em.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-em.o `test -f 'em.cpp' || echo '$(srcdir)/'`em.cpp

libmiblab_a-em.obj: em.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-em.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-em.Tpo -c -o libmiblab_a-em.obj `if test -f 'em.cpp'; then $(CYGPATH_W) 'em.cpp'; else $(CYGPATH_W) '$(srcdir)/em.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-em.Tpo $(DEPDIR)/libmiblab_a-em.Po
#	source='em.cpp' object='libmiblab_a-em.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-em.obj `if test -f 'em.cpp'; then $(CYGPATH_W) 'em.cpp'; else $(CYGPATH_W) '$(srcdir)/em.cpp'; fi`

libmiblab_a-knn.o: knn.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-knn.o -MD -MP -MF $(DEPDIR)/libmiblab_a-knn.Tpo -c -o libmiblab_a-knn.o `test -f 'knn.cpp' || echo '$(srcdir)/'`knn.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-knn.Tpo $(DEPDIR)/libmiblab_a-knn.Po
#	source='knn.cpp' object='libmiblab_a-knn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-knn.o `test -f 'knn.cpp' || echo '$(srcdir)/'`knn.cpp

libmiblab_a-knn.obj: knn.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-knn.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-knn.Tpo -c -o libmiblab_a-knn.obj `if test -f 'knn.cpp'; then $(CYGPATH_W) 'knn.cpp'; else $(CYGPATH_W) '$(srcdir)/knn.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-knn.Tpo $(DEPDIR)/libmiblab_a-knn.Po
#	source='knn.cpp' object='libmiblab_a-knn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-knn.obj `if test -f 'knn.cpp'; then $(CYGPATH_W) 'knn.cpp'; else $(CYGPATH_W) '$(srcdir)/knn.cpp'; fi`

libmiblab_a-dtree.o: dtree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-dtree.o -MD -MP -MF $(DEPDIR)/libmiblab_a-dtree.Tpo -c -o libmiblab_a-dtree.o `test -f 'dtree.cpp' || echo '$(srcdir)/'`dtree.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-dtree.Tpo $(DEPDIR)/libmiblab_a-dtree.Po
#	source='dtree.cpp' object='libmiblab_a-dtree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-dtree.o `test -f 'dtree.cpp' || echo '$(srcdir)/'`dtree.cpp

libmiblab_a-dtree.obj: dtree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-dtree.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-dtree.Tpo -c -o libmiblab_a-dtree.obj `if test -f 'dtree.cpp'; then $(CYGPATH_W) 'dtree.cpp'; else $(CYGPATH_W) '$(srcdir)/dtree.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-dtree.Tpo $(DEPDIR)/libmiblab_a-dtree.Po
#	source='dtree.cpp' object='libmiblab_a-dtree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-dtree.obj `if test -f 'dtree.cpp'; then $(CYGPATH_W) 'dtree.cpp'; else $(CYGPATH_W) '$(srcdir)/dtree.cpp'; fi`

libmiblab_a-forest.o: forest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-forest.o -MD -MP -MF $(DEPDIR)/libmiblab_a-forest.Tpo -c -o libmiblab_a-forest.o `test -f 'forest.cpp' || echo '$(srcdir)/'`forest.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-forest.Tpo $(DEPDIR)/libmiblab_a-forest.Po
#	source='forest.cpp' object='libmiblab_a-forest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-forest.o `test -f 'forest.cpp' || echo '$(srcdir)/'`forest.cpp

libmiblab_a-forest.obj: forest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-forest.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-forest.Tpo -c -o libmiblab_a-forest.obj `if test -f 'forest.cpp'; then $(CYGPATH_W) 'forest.cpp'; else $(CYGPATH_W) '$(srcdir)/forest.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-forest.Tpo $(DEPDIR)/libmiblab_a-forest.Po
#	source='forest.cpp' object='libmiblab_a-forest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-forest.obj `if test -f 'forest.cpp'; then $(CYGPATH_W) 'forest.cpp'; else $(CYGPATH_W) '$(srcdir)/forest.cpp'; fi`

libmiblab_a-parzen.o: parzen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-parzen.o -MD -MP -MF $(DEPDIR)/libmiblab_a-parzen.Tpo -c -o libmiblab_a-parzen.o `test -f 'parzen.cpp' || echo '$(srcdir)/'`parzen.cpp
	$(am__mv) $(DEPDIR)/libmiblab_a-parzen.Tpo $(DEPDIR)/libmiblab_a-parzen.Po
#	source='parzen.cpp' object='libmiblab_a-parzen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-parzen.o `test -f 'parzen.cpp' || echo '$(srcdir)/'`parzen.cpp

libmiblab_a-parzen.obj: parzen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libmiblab_a-parzen.obj -MD -MP -MF $(DEPDIR)/libmiblab_a-parzen.Tpo -c -o libmiblab_a-parzen.obj `if test -f 'parzen.cpp'; then $(CYGPATH_W) 'parzen.cpp'; else $(CYGPATH_W) '$(srcdir)/parzen.cpp'; fi`
	$(am__mv) $(DEPDIR)/libmiblab_a-parzen.Tpo $(DEPDIR)/libmiblab_a-parzen.Po
#	source='parzen.cpp' object='libmiblab_a-parzen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmiblab_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libmiblab_a-parzen.obj `if test -f 'parzen.cpp'; then $(CYGPATH_W) 'parzen.cpp'; else $(CYGPATH_W) '$(srcdir)/parzen.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
